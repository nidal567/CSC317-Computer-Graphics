#include "cube.h"

void cube(
  Eigen::MatrixXd & V,
  Eigen::MatrixXi & F,
  Eigen::MatrixXd & UV,
  Eigen::MatrixXi & UF,
  Eigen::MatrixXd & NV,
  Eigen::MatrixXi & NF)
{
  ////////////////////////////////////////////////////////////////////////////
  // Add your code here:

  ////Hint:
  V.resize(8,3);
  F.resize(6,4);
  UV.resize(14,2);
  UF.resize(6,4);
  NV.resize(6,3);
  NF.resize(6,4);

    // Eight vertices in a cube. 
  V << 0, 0, 0,
       0, 1, 0,
       0, 1, 1,
       0, 0, 1,
       1, 0, 0,
       1, 1, 0,
       1, 1, 1,
       1, 0, 1;

  
  F << 3, 2, 1, 0,
       4, 5, 6, 7,
       0, 4, 7, 3,
       1, 2, 6, 5,
       0, 1, 5, 4,
       2, 3, 7, 6;


  // Six faces for a cube. Norm direction is trivial. 
  NV << -1, 0, 0,
        1, 0, 0,
        0, -1, 0,
        0, 1, 0,
        0, 0, -1,
        0, 0, 1;

  NF << 0, 0, 0, 0,
        1, 1, 1, 1,
        2, 2, 2, 2,
        3, 3, 3, 3,
        4, 4, 4, 4,
        5, 5, 5, 5;

  // 14 UVs for a cube.
  UV << 0, 0.25,      // [0]
        0, 0.5,       // [1]
        0.25, 0.5,    // [2]
        0.25, 0.75,   // [3]     
        0.5,  0.75,   // [4]
        0.5, 0.5,     // [5]
        0.75, 0.5,    // [6]
        1, 0.5,       // [7]
        1, 0.25,      // [8]
        0.75, 0.25,   // [9]
        0.5, 0.25,    // [10]
        0.5, 0,       // [11]
        0.25, 0,      // [12]
        0.25, 0.25,   // [13]


  UF << 0, 1, 2, 13,
        2, 3, 4, 5,
        2, 5, 10, 13,
        13, 10, 11, 12,
        5, 6, 9, 10,
        6, 7, 8, 9;

  ////////////////////////////////////////////////////////////////////////////
}
